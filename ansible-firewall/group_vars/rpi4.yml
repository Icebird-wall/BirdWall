# ─────────────────────────────────────────────────────────────────────────────
#  group_vars/firewall.yml           ← single source of truth
# ─────────────────────────────────────────────────────────────────────────────

firewall_cfg:

  ##########################################################################
  # 1 ▸ INTERFACES & ADDRESSING
  ##########################################################################
  interfaces:
    lan:
      nic: &lan_if "eth0" #EXAMPLE- USE YOUR NIC NAME FROM UBUNTU INSTALLATION
      cidr: "172.16.0.116/24" #EXAMPLE- USE THE IP/SUBNET COMBO YOU WANT FOR YOUR LAN

    wan:
      nic: &wan_if "enxd634ae8ac223"
      method: "dhcp" # DHCP IS USED HERE CAUSE I'M DOING TETHERING/GETTING INTERNET FROM ANOTHER SOURCE/CABLE. EDIT AS NEEDED

  ##########################################################################
  # 2 ▸ NETWORK ADDRESS TRANSLATION
  ##########################################################################
  nat: true                                   # masquerade LAN → WAN

  ##########################################################################
  # 3 ▸ DEFAULT POLICY (per nftables base chains)
  ##########################################################################
  policy:
    input:   drop
    forward: drop
    output:  accept

  ##########################################################################
  # 4 ▸ SIMPLE ALLOW/DENY RULES  (ordered; most specific first)
  ##########################################################################
  rules:
    - chain: input
      from:  lan
      action: accept
      comment: "Allow LAN traffic to reach the firewall"

    - chain: input
      proto: icmp
      action: accept
      comment: "Allow ping"

    - chain: forward
      from: lan
      to:   wan
      action: accept
      comment: "Permit LAN → WAN forwarding"

  ##########################################################################
  # 5 ▸ DSCP CLASSES   (high-level notation → nft mangle rules)
  ##########################################################################
  dscp_classes:

    voice:
      mark: cs6
      match:
        udp_ports: [53, 5353, 853]            # DNS / DoT / mDNS

    gaming:
      mark: af31
      match:
        udp_ports: "5000-5500,8393-8400"

    streaming:
      mark: af11
      match:
        
    torrent:
      mark: cs1
      match:
        tcp_ports: "6881-6999,1337,6960-6969"
        udp_ports: "6881-6999,1337,6960-6969"

    web:
      mark: af21
      match:
        tcp_ports: "80,443"
        udp_ports: "80,443"

    fps:
      mark: af41
      match:
        udp_ports: "27015-27030"              # CS:GO etc.

  ##########################################################################
  # 6 ▸ CAKE  (per-interface shaping)
  ##########################################################################
  cake:
    enabled: true

    wan:
      nic: *wan_if
      # ifb will default to “ifb_<nic>” in the task file
      download: 3000mbit              # ingress  (WAN→LAN)
      upload:   10mbit              # egress   (LAN→WAN)
      rtt: 5ms
      overhead: 44
      mpu: 96
      diffserv: diffserv8
      extra_opts: " nowash triple-isolate nat ack-filter-aggressive split-gso "

    lan:
      rtt: 5ms
      overhead: 44
      mpu: 96    
      nic: *lan_if
      download: 1gbit
      upload:   1gbit
      diffserv: diffserv8
      extra_opts: " split-gso "


dscp_rules: |
  ip protocol udp meta length < 1024 ip dscp set ef
  # DNS traffic (CS5)
  ip protocol udp th dport 53 ip dscp set cs5
  ip protocol tcp th dport 53 ip dscp set cs5
  # HTTPS (AF33)
  ip protocol tcp th dport 443 ip dscp set af33
  ip protocol tcp th sport 443 ip dscp set af33
  # HTTP (AF33)
  ip protocol tcp th dport 80 ip dscp set af31
  ip protocol tcp th sport 80 ip dscp set af31
  # BitTorrent (port-based) => CS1
  tcp dport 6881-6999 ip dscp set cs1
  tcp sport 6881-6999 ip dscp set cs1
  tcp dport 51413 ip dscp set cs1
  tcp sport 51413 ip dscp set cs1
  tcp dport 6969 ip dscp set cs1
  tcp sport 6969 ip dscp set cs1
  udp dport 6881-6999 ip dscp set cs1
  udp sport 6881-6999 ip dscp set cs1
  udp dport 51413 ip dscp set cs1
  udp sport 51413 ip dscp set cs1
  udp dport 6969 ip dscp set cs1
  udp sport 6969 ip dscp set cs1
  # Large flows => AF13
  ct bytes ge 5000000 ip dscp set af13
  ct bytes ge 5000000 ip dscp set af13
